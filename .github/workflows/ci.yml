name: CI

on:
  push:
  pull_request:

jobs:
  build:
    timeout-minutes: 5

    strategy:
      matrix:
        rust_version: [stable, "1.51"]
        os: [windows-latest, macos-latest, ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_version }}
        components: rustfmt, clippy

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-${{ rustc_hash }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-${{ rustc_hash }}-cargo-

    - uses: actions-rs/cargo@v1
      with:
        command: build

    - uses: actions-rs/cargo@v1
      with:
        command: test

    - uses: actions-rs/cargo@v1
      with:
        command: clippy
      if: matrix.rust_version == 'stable'

  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust toolchain
        run: |
          rustup component add rustfmt

      - name: Rustfmt
        run: |
          cargo fmt -- --check

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          log-level: warn
          command: check
          arguments: --all-features
